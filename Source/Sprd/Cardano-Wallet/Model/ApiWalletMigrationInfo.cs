/* 
 * Cardano Wallet Backend API
 *
 * <p align=\"right\"><img style=\"position: relative; top: -10em; margin-bottom: -12em;\" width=\"20%\" src=\"https://cardanodocs.com/img/cardano.png\"></img></p> 
 *
 * OpenAPI spec version: 2021.2.15
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// ApiWalletMigrationInfo
    /// </summary>
    [DataContract]
        public partial class ApiWalletMigrationInfo :  IEquatable<ApiWalletMigrationInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApiWalletMigrationInfo" /> class.
        /// </summary>
        /// <param name="migrationCost">migrationCost (required).</param>
        /// <param name="leftovers">leftovers (required).</param>
        public ApiWalletMigrationInfo(ApiWalletMigrationInfoMigrationCost migrationCost = default(ApiWalletMigrationInfoMigrationCost), ApiWalletMigrationInfoLeftovers leftovers = default(ApiWalletMigrationInfoLeftovers))
        {
            // to ensure "migrationCost" is required (not null)
            if (migrationCost == null)
            {
                throw new InvalidDataException("migrationCost is a required property for ApiWalletMigrationInfo and cannot be null");
            }
            else
            {
                this.MigrationCost = migrationCost;
            }
            // to ensure "leftovers" is required (not null)
            if (leftovers == null)
            {
                throw new InvalidDataException("leftovers is a required property for ApiWalletMigrationInfo and cannot be null");
            }
            else
            {
                this.Leftovers = leftovers;
            }
        }
        
        /// <summary>
        /// Gets or Sets MigrationCost
        /// </summary>
        [DataMember(Name="migration_cost", EmitDefaultValue=false)]
        public ApiWalletMigrationInfoMigrationCost MigrationCost { get; set; }

        /// <summary>
        /// Gets or Sets Leftovers
        /// </summary>
        [DataMember(Name="leftovers", EmitDefaultValue=false)]
        public ApiWalletMigrationInfoLeftovers Leftovers { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApiWalletMigrationInfo {\n");
            sb.Append("  MigrationCost: ").Append(MigrationCost).Append("\n");
            sb.Append("  Leftovers: ").Append(Leftovers).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApiWalletMigrationInfo);
        }

        /// <summary>
        /// Returns true if ApiWalletMigrationInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of ApiWalletMigrationInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApiWalletMigrationInfo input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MigrationCost == input.MigrationCost ||
                    (this.MigrationCost != null &&
                    this.MigrationCost.Equals(input.MigrationCost))
                ) && 
                (
                    this.Leftovers == input.Leftovers ||
                    (this.Leftovers != null &&
                    this.Leftovers.Equals(input.Leftovers))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MigrationCost != null)
                    hashCode = hashCode * 59 + this.MigrationCost.GetHashCode();
                if (this.Leftovers != null)
                    hashCode = hashCode * 59 + this.Leftovers.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
